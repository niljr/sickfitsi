{"version":3,"file":"static/webpack/static/development/pages/sell.js.4c2ae75ca72bb43d0dbe.hot-update.js","sources":["webpack:///./components/CreateItem.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\n\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\n\nconst CREATE_ITEM_MUTATION = gql`\n    mutation CREATE_ITEM_MUTATION(\n        $title: String!\n        $description: String!\n        $price: Int!\n        $image: String\n        $largeImage: String\n    ) {\n        createItem(\n        title: $title\n        description: $description\n        price: $price\n        image: $image\n        largeImage: $largeImage\n         ) {\n        id\n         }\n    }\n`;\n\nclass CreateItem extends Component {\n    state = {\n        title: 'T',\n        description: 'Des',\n        image: 't.jpg',\n        largeImage: 'lt.jpg',\n        price: 1000\n    }\n    handleChange = e => {\n        const { name, type, value } = e.target;\n        const val = type === 'number' ? parseFloat(value): value;\n        this.setState({ [name]: val });\n    };\n    \n    render() {\n        return (\n            <Mutation mutation={CREATE_ITEM_MUTATION} variables={this.state}>\n                {(createItem, {loading, error}) => (\n                    <Form onSubmit={async e => {\n                        e.preventDefault();\n                        const res = await createItem(); \n                        Router.push({\n                            pathname: '/item',\n                            query: { id: res.data.createItem.id }\n                        })\n                    }}>\n                        <Error error={error}  />\n                        <fieldset disabled={loading} aria-busy={loading}>\n                            <label htmlFor=\"title\">\n                                Title\n                                <Input \n                                    type=\"text\"\n                                    id=\"title\"\n                                    name=\"title\"\n                                    placeholder=\"Title\"\n                                    required\n                                    value={this.state.title}\n                                    onChange={this.handleChange}\n                                />\n                            </label>\n\n                            <label htmlFor=\"price\">\n                                Price\n                                <Input \n                                    type=\"numbers\"\n                                    id=\"price\"\n                                    name=\"price\"\n                                    placeholder=\"Price\"\n                                    required\n                                    value={this.state.price}\n                                    onChange={this.handleChange}\n                                />\n                            </label>\n\n                            <label htmlFor=\"description\">\n                                Price\n                                <textarea \n                                    type=\"numbers\"\n                                    id=\"price\"\n                                    name=\"price\"\n                                    placeholder=\"Price\"\n                                    required\n                                    value={this.state.price}\n                                    onChange={this.handleChange}\n                                />\n                            </label>\n\n                            <label htmlFor=\"description\">\n                                Price\n                                <textarea\n                                    id=\"description\"\n                                    name=\"description\"\n                                    placeholder=\"price\"\n                                    required\n                                    value={this.state.price}\n                                    onChange={this.handleChange}\n                                />\n                            </label>\n                        </fieldset>\n                    </Form>\n                )}                \n            </Mutation>\n        )\n    }\n}\n\nexport default CreateItem;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAmBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AApDA;AAkEA;;;;AAnFA;AACA;AAqFA;;;;A","sourceRoot":""}